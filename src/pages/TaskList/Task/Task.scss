$border: 1px solid var(--border-color);
$min-task-height: 50px;

@mixin withTopBottomBorder($color: var(--border-color)) {
  &:before {
    @include absolute(0, null, 0);
    @include dimen(100%, calc(100% + 1px));

    border-top: 1px solid $color;
    border-bottom: 1px solid $color;
    content: '';
  }
}

.task {
  @include dimen(100%);
  @include flex(center);
  @include padding-x(10px);
  @include relative();
  @include withTopBottomBorder(transparent);
  background-color: var(--main-color);

  .task-input-base {
    @include relative();
    @include withTopBottomBorder();
    min-height: $min-task-height;
    min-width: 0;

    .task-input-base-end-adornment {
      visibility: hidden;
    }
  }

  &:hover,
  &.focused,
  &.dragging {
    background-color: var(--task-highlight-background-color);

    .task-input-base::before {
      border-color: transparent;
    }
  }

  &:hover,
  &.focused {
    &:before {
      border-color: var(--border-color);
    }
    &,
    & + .task:not(:last-child) {
      .task-input-base::before {
        border-color: transparent;
      }
    }

    // input endAdornment
    .task-input-base .mui-icon-button {
      visibility: visible;
    }
  }

  &:hover {
    z-index: 1;
  }

  &:first-child {
    .task-input-base:before {
      border-top-color: transparent;
    }
  }

  .toggle-completed {
    @include relative();

    .mui-icon-button {
      + .mui-icon-button {
        @include absolute();
        visibility: hidden;
      }
    }

    .mui-tick-icon {
      color: var(--accent-color);
    }
  }

  .toggle-completed,
  .task-input-base-end-adornment {
    @include flex(center);
    align-self: stretch;
    max-height: 68px;
    margin-top: 1px;
  }

  .task-input-content {
    @include dimen(100%);
    @include flex(flex-start, center, column);
    @include padding-y(12px); // padding-y for multiple line
    @include relative();
    align-self: center;
    overflow: hidden;

    .mui-input-base {
      $line-height: 20px;
      @include sq-dimen(auto);
      font-size: 14px;
      line-height: $line-height;
      min-height: 0;
      padding: 0;
      width: 100%;

      textarea {
        min-height: $line-height;
      }
    }
  }

  .task-notes {
    @include dimen(100%);
    @include multi-line-ellipsis($line-height: 16px);
    @include margin-y(2px);
    color: var(--text-secondary-color);
    font-size: 12px;
    overflow-wrap: break-word;
  }

  .task-due-date-button {
    @include flex(center, center);

    align-self: flex-start;
    background-color: var(--task-highlight-background-color);
    border: 1px solid var(--main-color-diff);
    border-radius: 3px;
    color: var(--text-secondary-color);
    cursor: pointer;
    font-size: 12px;
    line-height: 16px;
    margin-top: 8px;
    padding: 6px 7px 5px;

    svg {
      color: var(--accent-color);
      font-size: 16px;
      margin-right: 6px;
    }

    &:after {
      content: attr(data-date);
    }

    &[data-date^='Today'] {
      &:after {
        color: var(--accent-color);
        font-weight: 500;
      }
    }

    &[data-date^='Yesterday'],
    &[data-date*='ago'] {
      svg {
        color: var(--error-color);
      }
    }

    &:hover {
      background-color: var(--main-color);
      box-shadow: 0px 5px 10px var(--shadow-color);
    }
  }
}

.completed-task {
  textarea {
    text-decoration: line-through;
  }
}
